{
  "name": "ros2-ws",
  "dockerFile": "Dockerfile",
  "remoteUser": "human",
  "runArgs": [
    // "--network=host", // Network host allows for host process to communicate. However, with this on, it can interfere with other computers on the same network.
    // "--runtime=nvidia",
    // "--gpus=all",
    "--cap-add=SYS_PTRACE", // debugger
    "--security-opt=seccomp:unconfined", // Don't remember what this is for
    "--security-opt=apparmor:unconfined", // Don't remember what this is for
    "--device=/dev/dri", // GPU
    "--volume=/tmp/.X11-unix:/tmp/.X11-unix", // X11 GUI, may work with wayland as well
    "--volume=/dev/bus/usb:/dev/bus/usb", // USB device sharing
    "--ulimit=rtprio=98",
    "--ulimit=memlock=-1"
  ],
  "containerEnv": {
    "DISPLAY": "${localEnv:DISPLAY}",
    "QT_X11_NO_MITSHM": "1",
    "WORKSPACE_FOLDER": "${containerWorkspaceFolder}"
  },
  "overrideCommand": false,
  "init": true,
  "customizations": {
    "vscode": {
      "settings": {
        "telemetry.telemetryLevel": "off",
        "telemetry.enableTelemetry": false,
        "editor.formatOnSave": true,
        // Use clangd instead of intellisense
        "C_Cpp.intelliSenseEngine": "disabled",
        "clangd.arguments": [
          "--header-insertion=never"
        ],
        "[cpp]": {
          "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
        },
        "search.exclude": {
          "**/node_modules": true,
          "**/bower_components": true,
          "**/*.code-search": true,
          "**/log/**": true,
          "**/build/**": true,
          "**/install/**": true,
          "**/.cache/**": true
        },
        "search.useIgnoreFiles": false
      },
      "extensions": [
        "ms-python.python",
        "ms-iot.vscode-ros",
        "ms-vscode.cpptools",
        "redhat.vscode-yaml",
        "smilerobotics.urdf",
        "twxs.cmake",
        "llvm-vs-code-extensions.vscode-clangd",
        "cschlosser.doxdocgen"
      ]
    }
  }
}
